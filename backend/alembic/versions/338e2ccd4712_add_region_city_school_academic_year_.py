"""Add region, city, school, academic_year models and update existing models

Revision ID: 338e2ccd4712
Revises: 4d4943f22dcf
Create Date: 2025-06-02 11:53:26.031026

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '338e2ccd4712'
down_revision: Union[str, None] = '4d4943f22dcf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('academic_years',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year_start', sa.Date(), nullable=False),
    sa.Column('year_end', sa.Date(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_academic_years_id'), 'academic_years', ['id'], unique=False)
    op.create_table('regions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_regions_id'), 'regions', ['id'], unique=False)
    op.create_table('cities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cities_id'), 'cities', ['id'], unique=False)
    op.create_table('schools',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schools_id'), 'schools', ['id'], unique=False)
    op.add_column('attendance', sa.Column('academic_year_id', sa.Integer(), nullable=False))
    op.drop_constraint('uix_student_date', 'attendance', type_='unique')
    op.drop_constraint('attendance_student_id_fkey', 'attendance', type_='foreignkey')
    op.create_foreign_key(None, 'attendance', 'academic_years', ['academic_year_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'attendance', 'students', ['student_id'], ['id'], ondelete='CASCADE')
    op.drop_column('attendance', 'reason')
    op.add_column('grades', sa.Column('academic_year_id', sa.Integer(), nullable=False))
    op.drop_constraint('grades_student_id_fkey', 'grades', type_='foreignkey')
    op.drop_constraint('grades_teacher_id_fkey', 'grades', type_='foreignkey')
    op.drop_constraint('grades_subject_id_fkey', 'grades', type_='foreignkey')
    op.create_foreign_key(None, 'grades', 'subjects', ['subject_id'], ['id'], ondelete='RESTRICT')
    op.create_foreign_key(None, 'grades', 'students', ['student_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'grades', 'academic_years', ['academic_year_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'grades', 'teachers', ['teacher_id'], ['id'], ondelete='CASCADE')
    op.add_column('parents', sa.Column('first_name', sa.String(length=50), nullable=False))
    op.add_column('parents', sa.Column('last_name', sa.String(length=50), nullable=False))
    op.add_column('parents', sa.Column('contact_info', sa.String(length=100), nullable=True))
    op.drop_column('parents', 'name')
    op.drop_column('parents', 'messenger_id')
    op.drop_column('parents', 'phone')
    op.add_column('schedules', sa.Column('school_id', sa.Integer(), nullable=False))
    op.add_column('schedules', sa.Column('academic_year_id', sa.Integer(), nullable=False))
    op.drop_constraint('schedules_subject_id_fkey', 'schedules', type_='foreignkey')
    op.drop_constraint('schedules_teacher_id_fkey', 'schedules', type_='foreignkey')
    op.create_foreign_key(None, 'schedules', 'schools', ['school_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'schedules', 'academic_years', ['academic_year_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'schedules', 'subjects', ['subject_id'], ['id'], ondelete='RESTRICT')
    op.create_foreign_key(None, 'schedules', 'teachers', ['teacher_id'], ['id'], ondelete='CASCADE')
    op.add_column('students', sa.Column('school_id', sa.Integer(), nullable=False))
    op.drop_constraint('students_parent_id_fkey', 'students', type_='foreignkey')
    op.create_foreign_key(None, 'students', 'schools', ['school_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'students', 'parents', ['parent_id'], ['id'], ondelete='SET NULL')
    op.add_column('subjects', sa.Column('school_id', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_subjects_school_id'), 'subjects', ['school_id'], unique=False)
    op.create_foreign_key(None, 'subjects', 'schools', ['school_id'], ['id'])
    op.add_column('teachers', sa.Column('subject_id', sa.Integer(), nullable=False))
    op.add_column('teachers', sa.Column('contact_info', sa.String(length=100), nullable=True))
    op.add_column('teachers', sa.Column('school_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'teachers', 'schools', ['school_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'teachers', 'subjects', ['subject_id'], ['id'], ondelete='RESTRICT')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'teachers', type_='foreignkey')
    op.drop_constraint(None, 'teachers', type_='foreignkey')
    op.drop_column('teachers', 'school_id')
    op.drop_column('teachers', 'contact_info')
    op.drop_column('teachers', 'subject_id')
    op.drop_constraint(None, 'subjects', type_='foreignkey')
    op.drop_index(op.f('ix_subjects_school_id'), table_name='subjects')
    op.drop_column('subjects', 'school_id')
    op.drop_constraint(None, 'students', type_='foreignkey')
    op.drop_constraint(None, 'students', type_='foreignkey')
    op.create_foreign_key('students_parent_id_fkey', 'students', 'parents', ['parent_id'], ['id'])
    op.drop_column('students', 'school_id')
    op.drop_constraint(None, 'schedules', type_='foreignkey')
    op.drop_constraint(None, 'schedules', type_='foreignkey')
    op.drop_constraint(None, 'schedules', type_='foreignkey')
    op.drop_constraint(None, 'schedules', type_='foreignkey')
    op.create_foreign_key('schedules_teacher_id_fkey', 'schedules', 'teachers', ['teacher_id'], ['id'])
    op.create_foreign_key('schedules_subject_id_fkey', 'schedules', 'subjects', ['subject_id'], ['id'])
    op.drop_column('schedules', 'academic_year_id')
    op.drop_column('schedules', 'school_id')
    op.add_column('parents', sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.add_column('parents', sa.Column('messenger_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('parents', sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.drop_column('parents', 'contact_info')
    op.drop_column('parents', 'last_name')
    op.drop_column('parents', 'first_name')
    op.drop_constraint(None, 'grades', type_='foreignkey')
    op.drop_constraint(None, 'grades', type_='foreignkey')
    op.drop_constraint(None, 'grades', type_='foreignkey')
    op.drop_constraint(None, 'grades', type_='foreignkey')
    op.create_foreign_key('grades_subject_id_fkey', 'grades', 'subjects', ['subject_id'], ['id'])
    op.create_foreign_key('grades_teacher_id_fkey', 'grades', 'teachers', ['teacher_id'], ['id'])
    op.create_foreign_key('grades_student_id_fkey', 'grades', 'students', ['student_id'], ['id'])
    op.drop_column('grades', 'academic_year_id')
    op.add_column('attendance', sa.Column('reason', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'attendance', type_='foreignkey')
    op.drop_constraint(None, 'attendance', type_='foreignkey')
    op.create_foreign_key('attendance_student_id_fkey', 'attendance', 'students', ['student_id'], ['id'])
    op.create_unique_constraint('uix_student_date', 'attendance', ['student_id', 'date'])
    op.drop_column('attendance', 'academic_year_id')
    op.drop_index(op.f('ix_schools_id'), table_name='schools')
    op.drop_table('schools')
    op.drop_index(op.f('ix_cities_id'), table_name='cities')
    op.drop_table('cities')
    op.drop_index(op.f('ix_regions_id'), table_name='regions')
    op.drop_table('regions')
    op.drop_index(op.f('ix_academic_years_id'), table_name='academic_years')
    op.drop_table('academic_years')
    # ### end Alembic commands ###
